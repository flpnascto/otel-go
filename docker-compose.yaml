version: '3'
services:
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
  
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension

  goapp:
    container_name: goapp
    build: ./goapp
    environment:
      - OTEL_SERVICE_NAME=microservice-climate
      - REQUEST_NAME_OTEL=microservice-climate-request
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - HTTP_PORT=:8080
    depends_on:
      - jaeger-all-in-one
      - otel-collector
    volumes:
      - ./goapp:/go/src/app
    ports:
      - "8080:8080"

  goinput:
    container_name: goinput
    build: ./goinput
    environment:
      - OTEL_SERVICE_NAME=microservice-input
      - REQUEST_NAME_OTEL=microservice-input-request
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - EXTERNAL_CALL_URL=http://goapp:8080
      - HTTP_PORT=:8081
    depends_on:
      - jaeger-all-in-one
      - otel-collector
    volumes:
      - ./goinput:/go/src/app
    ports:
      - "8081:8081"